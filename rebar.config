{erl_opts, [debug_info, {no_auto_import, [{get,1}]}]}.

{deps, [
  {lfe, "~> 2.2"},
  {yuri, "~> 0.3", {pkg, "lfe_yuri"}}
]}.

{project_plugins, [
  %%{rebar3_lfe, "0.5.3"},
  {rebar3_lfe, {git, "https://github.com/lfe/rebar3.git", {branch, "release/0.5.x"}}},
  {rebar3_hex}
]}.

{provider_hooks, [
  {pre, [{compile, {lfe, compile}}]}
]}.

{xref_checks,[
  undefined_function_calls,undefined_functions,locals_not_used,
  deprecated_function_calls,deprecated_functions
]}.

{profiles, [
  {test, [
    {deps, [
      {ltest, "~> 0.13"},
      {proper, "~> 1.5"}
    ]},
    {eunit_opts, [verbose, {cover_enabled, true}, {timeout, 120}]},
    {erl_opts, [
      debug_info,
      {src_dirs, [
        "src",
        "test/unit",
        "test/integration",
        "test/property",
        "test/bench"
      ]}
    ]}
  ]},
  {testall, [
    {deps, [
      {proper, "~> 1.5"},
      {ltest, "~> 0.13"}
    ]},
    {plugins, [
      {rebar3_proper, "~> 0.12"}
    ]},
    {extra_src_dirs, [
      "test/unit",
      "test/integration",
      "test/proper",
      "test/bench"
    ]},
    {eunit_opts, [verbose, {cover_enabled, true}, {timeout, 120}]},
    {erl_opts, [debug_info]}
  ]},
  {unit, [
    {deps, [
      {ltest, "~> 0.13"}
    ]},
    %% Exclude auto-generated and trivial modules from coverage analysis
    {cover_excl_mods, [
      'http.mimetype',  % Auto-generated MIME type mappings (2000+ lines)
      'http.status',    % Auto-generated HTTP status code mappings (300+ lines)
      'http.vsn'        % Runtime version introspection helper
    ]},
    {eunit_opts, [verbose, {cover_enabled, true}, {timeout, 120}]},
    {extra_src_dirs, ["test/unit"]},
    {erl_opts, [debug_info]}
  ]},
  {integration, [
    {deps, [
      {ltest, "~> 0.13"}
    ]},
    {eunit_opts, [verbose, {cover_enabled, false}, {timeout, 120}]},
    {extra_src_dirs, ["test/integration"]},
    {erl_opts, [debug_info]}
  ]},
  {script, [
    {deps, [
      {logjam, "1.2.4"},
      {erl_csv, "0.3.3"}
    ]},
    {lfe, [
      {main, "scripts/gen.lfe"}
    ]},
    {erl_opts, [{src_dirs, ["src", "priv/tooling"]}]}
  ]}
]}.

{alias, [
  %% as unit
  {coverage, [
    compile,
    {eunit, "-c"},
    {cover, "-v --min_coverage=0"}
  ]},
  %% as unit or integration
  {ltest, [
    {lfe, ltest}
  ]},
  {repl, [
    compile,
    {lfe, repl}
  ]},
  %% as test
  {check, [
    compile
    %%xref,
    %%dialyzer
    %% proper setup
  ]},
  %% the following are used in development as part of the tooling and
  %% need to be run with 'as script':
  {'gen-help', [
    compile,
    {lfe, run}
  ]},
  {'gen-targets', [
    compile,
    {lfe, run, "-- list-targets"}
  ]},
  {'list-header-files', [
    compile,
    {lfe, run, "-- list-header-files"}
  ]},
  {'list-mime-files', [
    compile,
    {lfe, run, "-- list-mime-files"}
  ]},
  {'gen-all', [
    compile,
    {lfe, run, "-- all"}
  ]},
  {'gen-header-fields', [
    compile,
    {lfe, run, "-- header-fields"}
  ]},
  {'gen-mime-types', [
    compile,
    {lfe, run, "-- mime-types"}
  ]}
]}.
